&НаКлиенте
Перем ЭтоСуммаОперПлан;  //истина - Оперативный план, ложь - БизнесПлан
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПривилегированныйРежим(Истина);
	Отчет.Период.ДатаНачала=НачалоМесяца(НачалоМесяца(ТекущаяДата())-100);
	Отчет.Период.ДатаОкончания=КонецМесяца(Отчет.Период.ДатаНачала);
	Отчет.Организация=Справочники.Организации.ОрганизацияПоУмолчанию();
	ТекущийПользователь=Пользователи.ТекущийПользователь();
	 СписокПодразделений=ИБ_ПроцедурыСервер.СписокПодразделенийПользователя(ТекущийПользователь);
	 	 Если СписокПодразделений.Количество()>0 Тогда
		 Элементы.ОСП.РежимВыбораИзСписка=Истина;
		 Элементы.ОСП.СписокВыбора.ЗагрузитьЗначения(СписокПодразделений.ВыгрузитьЗначения());
 КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	Если   ПараметрыСеанса.ИБ_ДоступОграничен Тогда
		Элементы.ФормаЗагрузитьВариант.Видимость=Ложь;
		ЭтаФорма.КлючТекущегоВарианта="По подразделениям";
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаКомандыЗавершение(Результат,ДополнительныеПараметры) экспорт
	если Результат=Неопределено Тогда 
		Возврат;
	КонецЕсли;
	 Отчет.Период.ДатаНачала=Результат.НачалоПериода;
	 Отчет.Период.ДатаОкончания=Результат.КонецПериода;
КонецПроцедуры
&НаСервере
Процедура ПередЗагрузкойВариантаНаСервере(Настройки)
		ВариантМодифицирован=Ложь;
КонецПроцедуры
&НаКлиенте
Процедура УстановитьЭлементыОтбораженияФормыПоУмолчанию()
	      Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения=ДополнительныйРежимОтображения.Неактуальность;
		 Элементы.Результат.ОтображениеСостояния.Видимость = Истина;
	 Элементы.РедактироватьБюджет.Видимость=Элементы.ОСП.Видимость;
КонецПроцедуры
&НаКлиенте
Процедура СформироватьОтчет(Команда)
	Если   ЭтаФорма.КлючТекущегоВарианта="По подразделениям" И  ПодразделениеНеОтобрано()  Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрано ОСП или магазин/офис");
		Возврат;
	КонецЕсли;
	ЭтотОбъект.СкомпоноватьРезультат();
КонецПроцедуры
&НаСервере
Процедура СформироватьОтчетНаСервере()
	   Результат.Очистить();
		УстановитьПривилегированныйРежим(Истина);
		обОТчет=реквизитФормыВЗначение("Отчет");
		обОтчет.СкомпоноватьРезультат(Результат,ДанныеРасшифровки);
		УстановитьПривилегированныйРежим(Ложь);
	  КонецПроцедуры
&НаКлиенте
Процедура ОСППриИзменении(Элемент)
	УстановитьЭлементыОтбораженияФормыПоУмолчанию();
КонецПроцедуры
&НаКлиенте
Процедура РедактироватьБюджет(Команда)
	ПараметрыФормы=Новый Структура("НачалоПериода,Подразделение",Отчет.Период.ДатаНачала,Отчет.ОСП);
	ОткрытьФорму("Обработка.ИБ_ЗаполнениеБДР.Форма.Форма",ПараметрыФормы,,УникальныйИдентификатор);
КонецПроцедуры
&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОчиститьСообщения();
	Если ТипЗнч(Расшифровка)=Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
		Данные=ОбработатьРасшифровкуНаСервере(Расшифровка);
		Если ТипЗнч(Данные)=Тип("Неопределено") Тогда Возврат; КонецЕсли;
		ФормаПечати=Получитьформу("Отчет.ИБ_БюджетДоходовИРасходов.Форма.ФормаПечати");
		ФормаПечати.ТабДок=Данные;
		ФормаПечати.Открыть();
	Иначе
		ПоказатьЗначение(,Расшифровка);
		КонецЕсли;
КонецПроцедуры
&НаСервере
Функция ОбработатьРасшифровкуНаСервере(Расшифровка)
		ПоляРасшифровкиВВидеТаблицы = ПолучитьПоляРасшифровкиВВидеТаблицы(
								Расшифровка);
	параметрыОтбора=Новый структура("Поле","СуммаФакт");
	ПроверяемаяСтрока= ПоляРасшифровкиВВидеТаблицы.НайтиСтроки(параметрыОтбора);
	Если ПроверяемаяСтрока.Количество()=0 Тогда
		
		 Если   ИмяВариантаОтчета<>"По подразделениям" Тогда
				Сообщить("Внесение плановых данных осуществляется только в варианте отчета ""По подразделениям"".");   Возврат Неопределено;
			Иначе
				Возврат Неопределено;
				КонецЕсли;
		КонецЕсли;
	СтруктураДанных=Новый Структура;   ТекущееЗначение=Неопределено;
	Для Каждого  СтрокаТЧ Из ПоляРасшифровкиВВидеТаблицы Цикл
		Если СтрокаТЧ.Уровень=0 Тогда
			ТекущееЗначение=СтрокаТЧ.Значение; Продолжить; КонецЕсли;
		Если СтрокаТЧ.Уровень=1 Тогда
			Если  СтрокаТЧ.Значение=ТекущееЗначение Тогда
				Возврат ТекущееЗначение; КонецЕсли;
			     СтруктураДанных.Вставить(СтрокаТЧ.Поле,СтрокаТЧ.Значение);
			 КонецЕсли;
			 КонецЦикла;
		Если СтруктураДанных.Количество()=0 Тогда Возврат неопределено; КонецЕсли;
	Возврат ПолучитьРасшифровкуДанных(СтруктураДанных);	
КонецФункции
&НаСервере
Функция   ПолучитьПоляРасшифровки(Расшифровка)
	      ТаблицаРасшифровки = ПолучитьПоляРасшифровкиВВидеТаблицы(Расшифровка);
		Структура=Новый Структура;								
		Для Каждого     СтрокаТЧ ИЗ    ТаблицаРасшифровки цикл
			Если НЕ Структура.Свойство(СтрокаТЧ.Поле) Тогда
			   Структура.Вставить(СтрокаТЧ.Поле,СтрокаТЧ.Значение);    КонецЕсли;
			КонецЦикла;
	Возврат Структура;	
КонецФункции
Функция ПолучитьЗначениеПоИмениГруппировкиВРасшифровке(ИмяГруппировки, ТекущаяРасшифровка) Экспорт
	
	ПоляРасшифровки = ПолучитьПоляРасшифровкиВВидеТаблицы(ТекущаяРасшифровка);
	НайденнаяСтрока = ПоляРасшифровки.Найти(ИмяГруппировки, "Поле");
	Если Не НайденнаяСтрока = Неопределено Тогда
		Возврат НайденнаяСтрока.Значение;
	КонецЕсли;
	
	// Пример вызова:
	//Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	//	Склад = ПолучитьЗначениеПоИмениГруппировкиВРасшифровке("Склад", ДанныеРасшифровки, Расшифровка);
	//КонецПроцедуры
КонецФункции
Функция ПолучитьПоляРасшифровкиВВидеТаблицы(ТекущаяРасшифровка) Экспорт
	   	ДанныеРасшифровкиСКД=ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Уровень"); // уровень группировки в структуре отчета СКД
	ТЗ.Колонки.Добавить("Поле"); // имя поля или группировки
	ТЗ.Колонки.Добавить("Значение");
	ТЗ.Колонки.Добавить("Идентификатор"); // идентификаторв в коллекции ДанныеРасшифровки.Элементы
	
	ДобавитьПолеРасшифровкиВТаблицуРекурсивно(ТЗ, ТекущаяРасшифровка, ДанныеРасшифровкиСКД);
	
	Возврат ТЗ;
	
	// Пример вызова:
	//Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	//	ПоляРасшифорвки = ПолучитьПоляРасшифровкиВВидеТаблицы(Расшифровка, ДанныеРасшифровки);
	//КонецПроцедуры
КонецФункции
Процедура ДобавитьПолеРасшифровкиВТаблицуРекурсивно(ТаблицаРасшифровки, ТекущаяРасшифровка, ДанныеРасшифровкиСКД, Уровень = 0)
	
	ЭлементРасшифровки = ДанныеРасшифровкиСКД.Элементы[ТекущаяРасшифровка];
	
	УровеньРодителя = Уровень;
	Если ТипЗнч(ЭлементРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		УровеньРодителя = УровеньРодителя + 1;
		
		МассивПолей = ЭлементРасшифровки.ПолучитьПоля();
		Для Каждого Поле Из МассивПолей Цикл
			НоваяСтрока = ТаблицаРасшифровки.Добавить();
			НоваяСтрока.Поле = Поле.Поле;
			НоваяСтрока.Значение = Поле.Значение;
			НоваяСтрока.Уровень = Уровень;
			НоваяСтрока.Идентификатор = ЭлементРасшифровки.Идентификатор;
			
		КонецЦикла;
	КонецЕсли;
	
	МассивРодителей = ЭлементРасшифровки.ПолучитьРодителей();
	Для Каждого Родитель Из МассивРодителей Цикл
		ДобавитьПолеРасшифровкиВТаблицуРекурсивно(
				ТаблицаРасшифровки, 
				Родитель.Идентификатор,
				ДанныеРасшифровкиСКД,
				УровеньРодителя);
	КонецЦикла;
	
КонецПроцедуры
&НаСервере
Функция   ПолучитьРасшифровкуДанных(СтруктураДанных)
	Если Структураданных.Свойство("Счет")=Неопределено Тогда Возврат Неопределено; конецЕсли;
	Запрос=Новый Запрос;
	ЗаполнитьДанныеОтбораИзСКД();
		Если СтруктураДанных.Свойство("Период") Тогда
		МоментНачала=Новый Граница(СтруктураДанных.Период,ВидГраницы.Включая);
		МоментОкончания=Новый Граница(КонецМесяца(СтруктураДанных.Период),ВидГраницы.Включая);
	Иначе
		
		МоментНачала=Новый Граница(Отчет.Период.ДатаНачала,ВидГраницы.Включая);
		МоментОкончания=Новый Граница(Отчет.Период.ДатаОкончания,ВидГраницы.Включая);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НП",МоментНачала);
	Запрос.УстановитьПараметр("КП",МоментОкончания);
	Запрос.УстановитьПараметр("Статья",СтруктураДанных.Статья);
	ВыбранноеОСП= ?(СтруктураДанных.Свойство("ПодразделениеОрганизации"),СтруктураДанных.ПодразделениеОрганизации,Отчет.ОСП);
	Отчет.ОСП=Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	Если   СтруктураДанных.Свойство("ПодразделениеРодитель") Тогда
		      ВыбранноеОСП=?(СтруктураДанных.ПодразделениеРодитель=Null,Отчет.ОСП,СтруктураДанных.ПодразделениеРодитель);
		КонецЕсли;
	Запрос.УстановитьПараметр("ОСП",ВыбранноеОСП);
	Запрос.УстановитьПараметр("Счет",СтруктураДанных.Счет);
	Запрос.УстановитьПараметр("СубконтоПрочиеДР",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("субконтоСтатьиЗатрат",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("СубконтоНоменклатура",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Если СтруктураДанных.Счет=ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД Тогда
		Запрос.Текст= ТекстЗапросаРасшифровкаВыручки(ВыбранноеОСП);
	ИначеЕсли МассивСчетаПродажТоваров().Найти(СтруктураДанных.Счет)<>Неопределено    Тогда
		     Запрос.Текст=ТекстЗапросаРасшифровкаПродажТоваров(ВыбранноеОСП);
	Иначе
		Запрос.Текст=ТекстЗапросаРасшифровкаСтроки(ВыбранноеОСП);
		КонецЕсли;

	   ТабДок=Новый ТабличныйДокумент;	   
	    ТекОбъект=РеквизитФормыВЗначение("Отчет");
		Макет=ТекОбъект.ПолучитьМакет("МакетРасшифровкаДанных");
		ОбластьМакета=Макет.ПолучитьОбласть("Шапка");
		ТабДок.Вывести(ОбластьМакета);
		РезультатВыборки=Запрос.Выполнить();
		Если РезультатВыборки.Пустой() Тогда Возврат ТабДок; КонецЕсли;
		ВыборкаИтоги=РезультатВыборки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаИтоги.Следующий() Цикл
			Выборка=ВыборкаИтоги.Выбрать();
			Пока Выборка.Следующий() Цикл
					ОбластьМакета=Макет.ПолучитьОбласть("Строка");
					ОбластьМакета.Параметры.Заполнить(Выборка);
					ТабДок.Вывести(ОбластьМакета);
			КонецЦикла;		
			ОбластьМакета=Макет.ПолучитьОбласть("Подвал");
			ОбластьМакета.Параметры.Заполнить(ВыборкаИтоги);
			ТабДок.Вывести(ОбластьМакета);
		КонецЦикла;
		ТабДок.АвтоМасштаб=Истина;
		ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
	Возврат ТабДок;	
КонецФункции
&НаСервере
Процедура ЗаполнитьДанныеОтбораИзСКД()
	Отчет.ОСП=Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	
	Для Каждого Элемент ИЗ Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		       	Если ТипЗнч(Элемент)=Тип("ЭлементОтбораКомпоновкиДанных") И ТипЗнч(Элемент.ПравоеЗначение)=Тип("СправочникСсылка.ПодразделенияОрганизаций") И Элемент.Использование=Истина Тогда
					Отчет.ОСП=Элемент.ПравоеЗначение; 
				ИначеЕсли ТипЗнч(Элемент)=Тип("ЗначениеПараметраНастроекКомпоновкиДанных") И ТипЗнч(Элемент.Значение)=Тип("СтандартныйПериод") Тогда
					       ЗаполнитьЗначенияСвойств(Отчет.Период,Элемент.Значение);
				КонецЕсли;
		КонецЦикла;
КонецПроцедуры
&НаСервере
Функция   ТекстЗапросаРасшифровкаСтроки(ВыбранноеОСП)
	 ТекстЗапроса="ВЫБРАТЬ
	              |	ХозрасчетныйОбороты.Регистратор КАК Документ,
	              |	ХозрасчетныйОбороты.СуммаОборотКт КАК Сумма
	              |ИЗ
	              |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	              |			&НП,
	              |			&КП,
	              |			Регистратор,
	              |			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходы)
	              |				И Счет = &Счет,
	              |			&СубконтоПрочиеДР,
	              |			Подразделение В ИЕРАРХИИ (&ОСП)
	              |				И Субконто1 В ИЕРАРХИИ (&Статья),
	              |			,
	              |			) КАК ХозрасчетныйОбороты
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	ХозрасчетныйОбороты.Регистратор,
	              |	ХозрасчетныйОбороты.СуммаОборотДт
	              |ИЗ
	              |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	              |			&НП,
	              |			&КП,
	              |			Регистратор,
	              |			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы)
	              |				И Счет = &Счет,
	              |			&субконтоПрочиеДР,
	              |			Подразделение В ИЕРАРХИИ (&ОСП)
	              |				И Субконто1 В ИЕРАРХИИ (&Статья),
	              |			,
	              |			) КАК ХозрасчетныйОбороты
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	ХозрасчетныйОбороты.Регистратор,
	              |	ВЫБОР
	              |		КОГДА ХозрасчетныйОбороты.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИздержкиОбращения)
	              |			ТОГДА ХозрасчетныйОбороты.СуммаОборот
	              |		ИНАЧЕ ХозрасчетныйОбороты.СуммаОборотДт
	              |	КОНЕЦ
	              |ИЗ
	              |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	              |			&НП,
	              |			&КП,
	              |			Регистратор,
	              |			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИздержкиОбращения)
	              |				И Счет = &Счет,
	              |			&субконтоСтатьиЗатрат,
	              |			Подразделение В ИЕРАРХИИ (&ОСП)
	              |				И Субконто1 В ИЕРАРХИИ (&Статья),
	              |			,
	              |			) КАК ХозрасчетныйОбороты
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	ХозрасчетныйОбороты.Регистратор,
	              |	ХозрасчетныйОбороты.СуммаОборотДт
	              |ИЗ
	              |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	              |			&НП,
	              |			&КП,
	              |			Регистратор,
	              |			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД)
	              |				И Счет = &Счет,
	              |			,
	              |			Подразделение В ИЕРАРХИИ (&ОСП),
	              |			,
	              |			) КАК ХозрасчетныйОбороты
	              |ИТОГИ
	              |	СУММА(Сумма)
	              |ПО
	              |	ОБЩИЕ";
				  ЭтоОСП= ЭтоОСП(ВыбранноеОСП);
				  Если ИмяВариантаОтчета="По подразделениям" или ИмяВариантаОтчета="По периодам"  Тогда
						  Если НЕ ЭтоОСП Тогда
							  ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"Подразделение В ИЕРАРХИИ (&ОСП)","Подразделение =&ОСП");   КонецЕсли;
					  Иначе
						  Если  ВыбранноеОСП.Пустая() Тогда
						      ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"Подразделение В ИЕРАРХИИ (&ОСП)","ИСТИНА");   
						  КонецЕсли;
						  КонецЕсли;
	Возврат ТекстЗапроса;	
КонецФункции
&НаСервере
Функция   ЭтоОСП(ВыбранноеОСП)
	Если ВыбранноеОСП=Справочники.ПодразделенияОрганизаций.ПустаяСсылка() Тогда
		Возврат ЛОЖЬ; КонецЕсли;
	    Запрос=Новый Запрос;
		ТекстЗапроса="ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ПодразделенияОрганизаций.Родитель = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоОСП
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|ГДЕ
		|	ПодразделенияОрганизаций.Ссылка = &ВыбранноеОСП";
		Запрос.Текст=ТекстЗапроса;
		Запрос.УстановитьПараметр("ВыбранноеОСП", ВыбранноеОСП);
		Выборка=Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
	Возврат Выборка.ЭтоОСП;	
КонецФункции
&НаСервере
Функция   ТекстЗапросаРасшифровкаВыручки(ВыбранноеОСП)
	Текстзапроса="ВЫБРАТЬ
	             |	ВЫБОР
	             |		КОГДА ХозрасчетныйОбороты.Субконто1.ВидНоменклатуры.Услуга
	             |			ТОГДА ВЫБОР
	             |					КОГДА ХозрасчетныйОбороты.Субконто1.Наименование ПОДОБНО ""%вознаграждение%""
	             |						ТОГДА КВ.Ссылка
	             |					ИНАЧЕ Услуги.Ссылка
	             |				КОНЕЦ
	             |		ИНАЧЕ ПродажаСвоегоТовара.Ссылка
	             |	КОНЕЦ КАК Статья,
	             |	ХозрасчетныйОбороты.СуммаОборотКт КАК Сумма,
	             |	ХозрасчетныйОбороты.Регистратор КАК Документ,
	             |	ХозрасчетныйОбороты.ПериодМесяц КАК Период
	             |ПОМЕСТИТЬ Темповая
	             |ИЗ
	             |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НП, &КП, Авто, Счет = &Счет, &СубконтоНоменклатура, Подразделение В ИЕРАРХИИ (&ОСП), , ) КАК ХозрасчетныйОбороты,
	             |	Справочник.ИБ_СтатьиДоходов КАК КВ,
	             |	Справочник.ИБ_СтатьиДоходов КАК ПродажаСвоегоТовара,
	             |	Справочник.ИБ_СтатьиДоходов КАК Услуги
	             |ГДЕ
	             |	КВ.Код = ""D-1-01-00-00""
	             |	И ПродажаСвоегоТовара.Код = ""D-1-02-00-00""
	             |	И Услуги.Код = ""D-2-00-00-00""
	             |
	             |ИНДЕКСИРОВАТЬ ПО
	             |	Статья
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	Темповая.Документ,
	             |	Темповая.Сумма КАК Сумма
	             |ИЗ
	             |	Темповая КАК Темповая
	             |ГДЕ
	             |	Темповая.Статья = &Статья
	             |ИТОГИ
	             |	СУММА(Сумма)
	             |ПО
	             |	ОБЩИЕ";
	   Если ИмяВариантаОтчета="По подразделениям" или ИмяВариантаОтчета="По периодам"  Тогда
						  Если НЕ ЭтоОСП(ВыбранноеОСП) Тогда
							  ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"Подразделение В ИЕРАРХИИ (&ОСП)","Подразделение =&ОСП");   КонецЕсли;
					  Иначе
						    Если  ВыбранноеОСП.Пустая() Тогда
						        ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"Подразделение В ИЕРАРХИИ (&ОСП)","");
						  КонецЕсли;
		 КонецЕсли;

	Возврат ТекстЗапроса;	
КонецФункции
&НаСервере
Функция   ТекстЗапросаРасшифровкаПродажТоваров(ВыбранноеОСП)
	     ТекстЗапроса="ВЫБРАТЬ
	                  |	ИБ_РеализацияТоваровФактОбороты.Регистратор КАК Документ,
	                  |	ВЫБОР
	                  |		КОГДА ИБ_РеализацияТоваровФактОбороты.Статья В ИЕРАРХИИ
	                  |				(ВЫБРАТЬ
	                  |					Доходы.Ссылка
	                  |				ИЗ
	                  |					Справочник.ИБ_СтатьиДоходов КАК Доходы
	                  |				ГДЕ
	                  |					Доходы.Код = ""D-1-02-00-00"")
	                  |			ТОГДА ИБ_РеализацияТоваровФактОбороты.СуммаОборот
	                  |		ИНАЧЕ ИБ_РеализацияТоваровФактОбороты.СуммаОборот - ИБ_РеализацияТоваровФактОбороты.СуммаОборот * 18 / 118
	                  |	КОНЕЦ КАК Сумма
	                  |ПОМЕСТИТЬ ДанныеРасшифровки
	                  |ИЗ
	                  |	РегистрНакопления.ИБ_РеализацияТоваровФакт.Обороты(
	                  |			&НП,
	                  |			&КП,
	                  |			Авто,
	                  |			Статья = &Статья
	                  |				И Подразделение В ИЕРАРХИИ (&ОСП)) КАК ИБ_РеализацияТоваровФактОбороты
	                  |;
	                  |
	                  |////////////////////////////////////////////////////////////////////////////////
	                  |ВЫБРАТЬ
	                  |	ДанныеРасшифровки.Документ КАК Документ,
	                  |	ДанныеРасшифровки.Сумма КАК Сумма
	                  |ИЗ
	                  |	ДанныеРасшифровки КАК ДанныеРасшифровки
	                  |ИТОГИ
	                  |	СУММА(Сумма)
	                  |ПО
	                  |	ОБЩИЕ";
					      Если  ВыбранноеОСП.Пустая() Тогда
						        ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"И Подразделение В ИЕРАРХИИ (&ОСП)","");
						  КонецЕсли;
	Возврат ТекстЗапроса;	
КонецФункции
&НаСервере
Функция   МассивСчетаПродажТоваров()
	Массив=Новый Массив;
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ТоварыНаСкладах);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ТоварыНаСкладе);	
	Возврат Массив;	
КонецФункции
&НаСервере
Процедура ВнестиПлановыеДанные(ПоляРасшифровкиВВидеТаблицы)
	СтруктураЗаполнения=Новый Структура;
	Для каждого СтрокаТЧ ИЗ ПоляРасшифровкиВВидеТаблицы Цикл
		      СтруктураЗаполнения.Вставить(СтрокаТЧ.Поле,СтрокаТЧ.Значение);
		КонецЦикла;
	  
КонецПроцедуры
&НаКлиенте
Процедура РезультатПриИзмененииСодержимогоОбласти(Элемент, Область)
	ЗаписатьДанныеВПлан(Область.Значение);
КонецПроцедуры
&НаКлиенте
Процедура РезультатВыбор(Элемент, Область, СтандартнаяОбработка)
	ДанныеДляЗаписиВПлан=Неопределено;
	Если Область.расшифровка=Неопределено Тогда
		ИмяОбласти=Область.Имя;
		ЧастиИмени=ЧастиИмени(ИмяОбласти);
		НомерКолонки=Число(ЧастиИмени.НомерКолонки);
		НомерСтроки=ЧастиИмени.НомерСтроки;
		расшифровкаОбласти=неопределено;
		расшифровкаОбластиОП  = Результат.Область("R"+НомерСтроки+"C"+(НомерКолонки+1)).Расшифровка;
		расшифровкаБП= Результат.Область("R"+НомерСтроки+"C"+(НомерКолонки+2)) .Расшифровка;
		Если   расшифровкаОбластиОП<>Неопределено Тогда
			расшифровкаОбласти=расшифровкаОбластиОП;
			ЭтоСуммаОперПлан=Истина;
		 ИначеЕсли  расшифровкаБП<>Неопределено Тогда
			 расшифровкаОбласти=расшифровкаБП;
			ЭтоСуммаОперПлан=Ложь; 
		Иначе Возврат; КонецЕсли;
		     ДанныеДляЗаписиВПлан= ПолучитьПоляРасшифровки(РасшифровкаОбласти);
			     // Убрать возможность редактирования в группировках
				 Если НЕ ДанныеДляЗаписиВПлан.Свойство("Статья") Тогда Возврат; КонецЕсли;
				 Если НЕ ДанныеДляЗаписиВПлан.Свойство("ПодразделениеОрганизации") Тогда Возврат; КонецЕсли;
				 Если    ЭтоГруппа(ДанныеДляЗаписиВПлан.Статья) Тогда Возврат; КонецЕсли;
				 
		Область.Защита=Ложь;
		Область.СодержитЗначение=Истина;
		КЧ = Новый КвалификаторыЧисла(15,2);
		Массив = Новый Массив;
		Массив.Добавить(Тип("Число"));
		ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
		Область.ТипЗначения=ОписаниеТиповЧ;		
		КонецЕсли;

	КонецПроцедуры
&НаСервереБезКонтекста
Функция   ЭтоГруппа(СсылкаНаСправочник)
		 Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаСправочник,"ЭтоГруппа");	
	КонецФункции
&НаКлиенте
Функция   ЧастиИмени(ИмяОбласти)
		   Структура=Новый Структура;
		   СимволС=СтрНайти(ИмяОБласти,"C");
		   Структура.Вставить("НомерКолонки",Сред(ИмяОбласти,СимволС+1));
		   Структура.Вставить("НомерСтроки",Сред(ИмяОбласти,2, СимволС-2));
		Возврат Структура;	
	КонецФункции
&НаКлиенте
Процедура ЗаписатьДанныеВПлан(НоваяСумма)
	Если НЕ  ТипЗнч(ДанныеДляЗаписиВПлан)=Тип("Структура") Тогда
		Возврат; КонецЕсли;
	  ПользовательскиеНастройкиОтчета=Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	Для Каждого Элемент ИЗ ПользовательскиеНастройкиОтчета цикл
		Если ТипЗнч(Элемент)=Тип("ЗначениеПараметраНастроекКомпоновкиДанных") И  ТипЗнч(Элемент.Значение)=Тип("СтандартныйПериод") Тогда
			       Отчет.Период=Элемент.Значение;
				   Прервать;
				   КонецЕсли;
			   КонецЦикла;
	ДанныеДляЗаписиВПлан.Вставить("НоваяСумма",НоваяСумма);	
	ДанныеДляЗаписиВПлан.Вставить("ТипФинансовогоПлана",?(ЭтоСуммаОперПлан,ПредопределенноеЗначение("Перечисление.ИБ_ТипыФинансовогоПлана.Оперативный"),
			ПредопределенноеЗначение("Перечисление.ИБ_ТипыФинансовогоПлана.БизнесПлан")));
	

	Если Отчет.Период.ДатаОкончания>КонецМесяца(Отчет.Период.ДатаНачала) Тогда
		СписокДат=СформироватьСписокДат();
		  ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ПриВыбореПериодаПлана",ЭтотОбъект),СписокДат,,СписокДат[0]);  
	  Иначе
		  ДанныеДляЗаписиВПлан.Вставить("ПериодПланирования",Отчет.Период.ДатаНачала);	
		  ЗаписатьДанныеВПланНаСервере();
	  КонецЕсли;	
	
КонецПроцедуры
&НаКлиенте
Функция   СформироватьСписокДат()
	        СписокДат=Новый СписокЗначений;
			Начало=Отчет.Период.ДатаНачала;
			Окончание=КонецМесяца(Отчет.Период.ДатаОкончания);
			Пока    КонецМесяца(Начало)<=Окончание Цикл
				     СписокДат.Добавить(Начало,Формат(Начало,  "ДФ='ММММ гггг'"));
					 Начало=НачалоМесяца(КонецМесяца(начало)+100);
				КонецЦикла;
	Возврат СписокДат;	
КонецФункции
&НаКлиенте
Процедура ПриВыбореПериодаПлана(результатВыбора,ДополнительныеПараметры) Экспорт
	Если результатВыбора=Неопределено Тогда
		ПоказатьПредупреждение(,"Не выбран период. Введенное значение не будет зафиксировано",5);
		Возврат; КонецЕсли;
	    ДанныеДляЗаписиВПлан.Вставить("ПериодПланирования",результатВыбора.Значение);	
		ЗаписатьДанныеВПланНаСервере();
КонецПроцедуры
&НаСервере
Процедура ЗаписатьДанныеВПланНаСервере()
   	        Документы.ИБ_БюджетыДоходовИРасходов.ДобавитьСтатьюВПланБДР(ДанныеДляЗаписиВПлан);
   КонецПроцедуры
&НаКлиенте
Функция   ПодразделениеНеОтобрано()
	
	Для Каждого ЭлементПН ИЗ  Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		
		Если 	ТипЗнч(ЭлементПН)=Тип("ЭлементОтбораКомпоновкиДанных") И ЭлементПН.Использование=Истина
					И ТипЗнч(ЭлементПН.ПравоеЗначение)=Тип("СправочникСсылка.ПодразделенияОрганизаций") И ЭтоОСП(ЭлементПН.ПравоеЗначение) Тогда
			Возврат Ложь;  КонецЕсли;// (Для ОСП)
		Если  ТипЗнч(ЭлементПН)=Тип("ЭлементОтбораКомпоновкиДанных") И ЭлементПН.Использование=Истина
					И ТипЗнч(ЭлементПН.ПравоеЗначение)=Тип("СправочникСсылка.ПодразделенияОрганизаций") И ЗначениеЗаполнено(ЭлементПН.ПравоеЗначение) Тогда
			Возврат Ложь; КонецЕсли;  // (Для Магазинов)  
	КонецЦикла;	
	Возврат Истина;	
КонецФункции
&НаКлиенте
Процедура ИзменитьДатуЗапретаИзменений(Команда)
	ОткрытьФорму("Отчет.ИБ_БюджетДоходовИРасходов.Форма.ФормаУстановкиДатыЗапретаИзменений",,ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

